# Build Workflow

name: Build with Gradle

on:
  pull_request:
  workflow_dispatch:
  push:
    branches: [ main ]
    tags: [ 'V*' ]

concurrency:
  group: ${{ github.head_ref || format('{0}-{1}', github.ref, github.run_number) }}
  cancel-in-progress: true

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: 17
          distribution: temurin

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
            **/loom-cache
            **/prebundled-jars
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --no-daemon

      - name: Find and rename artifacts
        id: find-artifacts
        run: |
          # Find all built jars
          JARS=$(find versions -name "*.jar" ! -name "*-dev.jar" ! -name "*-sources.jar")
          
          # Create artifacts directory
          mkdir -p artifacts
          
          # Process each jar
          for JAR in $JARS; do
            # Extract Minecraft version from path (e.g., 1.8.9 from versions/1.8.9/build/libs/...)
            MC_VERSION=$(echo "$JAR" | grep -oP 'versions/\K[^/]+')
          
            # Get platform (forge/fabric) from filename
            PLATFORM=$(basename "$JAR" | grep -oP 'Titanium_Rewrite-\K[^-]+')
          
            # New filename format: Titanium_Rewrite-<mcversion>-<platform>-<modversion>.jar
            NEW_NAME="Titanium_Rewrite-$MC_VERSION-$PLATFORM-${{ github.ref_name || 'dev' }}.jar"
          
            # Copy to artifacts directory with new name
            cp "$JAR" "artifacts/$NEW_NAME"
          
            # Output for upload
            echo "artifact_path=artifacts/$NEW_NAME" >> $GITHUB_OUTPUT
          done
        shell: bash

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: Titanium_Rewrite-Build-${{ github.run_number }}
          path: artifacts/*.jar
          if-no-files-found: error
          retention-days: 7